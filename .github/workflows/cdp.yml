name: cdp

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    branches: [master]

jobs:
  build-test-rust-linux:
    name: Build & test rust (linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install musl tools
        run: |
              sudo apt-get install musl-tools

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: ./binding-rust/Cargo.toml --release --target x86_64-unknown-linux-musl

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: ./binding-rust/Cargo.toml --release --target x86_64-unknown-linux-musl

  lint-rust:
    name: Lint rust
    runs-on: [ubuntu-latest, windows]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: ./binding-rust/Cargo.toml --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: ./binding-rust/Cargo.toml --all-targets --all-features -- -D warnings

  build-test-py:
    name: Build & Test python
    runs-on: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Running tests
        run: |
          nose2

  lint-py:
    name: Lint python
    runs-on: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Analysing the code with pylint
        run: |
          pylint *.py **/*.py

      - name: Analysing formatting with black
        run: |
          black --check --diff .

  build-test-rust-windows:
    name: Build & test rust (windows)
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: i686-pc-windows-msvc

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: ./binding-rust/Cargo.toml --release --target i686-pc-windows-msvc

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: ./binding-rust/Cargo.toml --release --target i686-pc-windows-msvc

  finish:
    name: Finish
    needs: [build-test-rust-linux, build-test-rust-windows, lint-rust, build-test-py, lint-py]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Done..."
